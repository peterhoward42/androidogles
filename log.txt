Android GL Play Around
----------------------

*  Get tutorial to work
*  Start afresh with copy to mess with keeping old as reference
*  Timeout for a second pass of studies
*  Get into github
*  Study and note git from first principles to be confident with branch usage
*  Tag the current commit as the official baseline
*  Make roadmap of ideas
*  Shaders from assets, retest, and commit
*  Dependency inject data for > 1 co-planar triangle
*  Have the camera transform change with time and add triangles out of plane
*  Have different bits of the model use different location transforms
o  Digress redisgn for lighting
    *  Decide input data structure for scene model - leave as is
    o  Convert back to drawArrays() with flat shading
        o  Check in local, remote and tag as pre mod
    o  Add in calculated face normals to world data structures
    o  Do and debug lighting calcs in vertex shader but don't use
    o  Pass calced light into fragment as varying and use it
o  Try a cad generated source

-----------------------------------------------------------------------------
Scene Model To Suit Triangles with Known Normals
-----------------------------------------------------------------------------
o  Just add in face normal - require that be normalised so no need for
   belt and braces later
o  Normal should be in model space
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
